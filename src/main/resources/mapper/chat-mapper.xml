<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chat">

	<select id="getRoomList" parameterType="string" resultType="room">
	SELECT DISTINCT
	    r.room_id AS roomId,
	    CASE 
	        WHEN groupCount.cnt >= 3 THEN r.room_name 
	        ELSE NVL(opponent.nickname, '나')        -- 그렇지 않으면 상대방 닉네임
	    END AS displayName,
	    latest.msg AS msg,
	    latest.msg_date AS msgDate,
	    groupCount.cnt AS memberCount
	FROM tbl_room r
	-- 로그인한 사용자가 참여한 채팅방 목록
	JOIN tbl_chat_members cm ON r.room_id = cm.room_id
	-- 각 채팅방의 참여 인원 수 계산
	LEFT JOIN (
	    SELECT room_id, COUNT(*) AS cnt
	    FROM tbl_chat_members
	    WHERE status = 'Y'
	    GROUP BY room_id
	) groupCount ON r.room_id = groupCount.room_id
	-- 각 채팅방의 최신 메시지 가져오기
	LEFT JOIN (
	    SELECT 
	        room_id, 
	        msg, 
	        msg_date
	    FROM (
	        SELECT 
	            t.room_id, 
	            t.msg, 
	            t.msg_date,
	            ROW_NUMBER() OVER (PARTITION BY t.room_id ORDER BY t.msg_date DESC) AS rn
	        FROM tbl_chat t
	    )
	    WHERE rn = 1 -- 각 방의 가장 최근 메시지
	) latest ON r.room_id = latest.room_id
	-- 상대방의 닉네임 가져오기
	LEFT JOIN (
	    SELECT DISTINCT
	        cm.room_id, 
	        m.member_nickname AS nickname,
            m.profile_name AS profileName,
            m.profile_path AS profilePath
	    FROM tbl_chat_members cm
	    JOIN tbl_exco m ON cm.member_no = m.member_no
	    WHERE cm.status = 'Y' AND cm.member_no != #{_parameter}
	) opponent ON r.room_id = opponent.room_id
	WHERE cm.member_no = #{_parameter} AND cm.is_hidden = 'N' -- AND~~ 숨김처리 추가한 것임.
	ORDER BY latest.msg_date DESC NULLS LAST
	</select>
	
	<!-- 숨김 상태 반환 -->
	<select id="getRoomHiddenStatus" parameterType="string" resultType="string">
	select is_hidden
	  from tbl_room
	 where room_id = #{roomId}
	</select>
	
	<select id="getChatList" parameterType="string" resultType="chat">
	SELECT 
	    a.room_id AS roomId, 
	    (SELECT z.room_name 
	     FROM tbl_room z 
	     WHERE z.room_id = a.room_id) AS roomName,
	    a.chat_id AS chatId, 
	    a.member_no AS memberNo, 
	    m.member_nickname AS memberNickname,
	    m.profile_path AS profilePath,
	    m.profile_name AS profileName,
	    a.msg_gb AS msgGb, 
	    a.msg, 
	    a.file_name AS fileName, 
	    a.file_path AS filePath, 
	    a.msg_date AS msgDate
	FROM tbl_chat a
	JOIN tbl_exco m 									-- 테이블 변경할 것(임시 지정)
	ON a.member_no = m.member_no
	WHERE TRIM(a.room_id) = #{_parameter}
	ORDER BY a.msg_date
	</select>
	
	<insert id="insertChat" parameterType="chat">
	insert into tbl_chat
		values 
		(
		#{roomId},
		seq_chat.nextval,
		#{memberNo},
		#{msgGb},
		#{msg},
		#{fileName},
		#{filePath},
		sysdate	
		)
	</insert>
	
	<select id="getRoomId" resultType="string">
	SELECT TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') || LPAD(seq_room.NEXTVAL, 4, '0') 
	       FROM DUAL
	</select>
	
	<insert id="insertRoom" parameterType="room">
	insert into tbl_room
		values 
		(
		#{roomId},
		#{roomName},
		#{createNo},
		sysdate
		)
	</insert>
	
	<insert id="insertChatMember" parameterType="room">
	insert into tbl_chat_members 
		values
		(
		#{roomId},
		#{createNo},
		'Y',
		'N'
		)
	</insert>
	
	<!-- 사용자별 숨김상태 업데이트 -->
	<update id="updateHiddenStatus" parameterType="map">
	update tbl_chat_members
	   set is_hidden = #{isHidden}
	 where TRIM(room_id) = #{roomId}
	   and member_no = #{memberNo}
	</update>
	
	<!-- 특정 채팅방에 참여중인 사용자 조회 -->
	<select id="getRecipientIdsByRoomId" parameterType="string" resultType="string">
    SELECT member_no
      FROM tbl_chat_members
     WHERE TRIM(room_id) = #{roomId}
       AND status = 'Y' -- 활성 상태인 사용자만 조회
	</select>
	
	<update id="deleteRoom" parameterType="chat">
	update tbl_chat_members
	   set status = 'N'
	 where TRIM(room_id) = #{roomId}
	   and member_no = #{memberNo} 
	</update>
	
	<!-- 기존 채팅방 검색 -->
    <select id="findRoomByMembers" parameterType="map" resultType="string">
       SELECT room_id 
        FROM tbl_chat_members
        WHERE room_id IN (
            SELECT room_id
            FROM tbl_chat_members
            WHERE member_no = #{memberNo}
        )
        AND member_no = #{otherMemberNo}
        GROUP BY room_id
    </select>
</mapper>
