<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">

  <!-- 로그인 -->
  <select id="selectOneMember" parameterType="member" resultType="member">
  	     SELECT 
         exco.member_no AS memberNo,
         exco.member_id AS memberId,
         exco.member_pw AS memberPw,
         exco.member_nickname AS memberNickname,
         exco.member_phone AS memberPhone,
         exco.member_addr AS memberAddr,
         exco.member_gender AS memberGender,
         exco.member_email AS memberEmail,
         exco.enroll_date AS enrollDate,
         exco.profile_path AS profilePath,
         exco.profile_name AS profileName,
         whole.member_type AS memberType
		 FROM tbl_exco exco
		 JOIN tbl_whole_member whole
		   ON exco.member_no = whole.member_no
		WHERE exco.member_id = #{memberId}
		  AND exco.member_pw = #{memberPw}
  </select>

  <!-- 회원가입 - 일반회원 -->  
  <insert id="insertMember" parameterType="member">
  		  insert into tbl_exco
  		  (member_no,
  		  member_id,
  	 	  member_pw,
  	 	  member_nickname,
  	 	  member_phone,
  	 	  member_addr,
  	 	  member_gender,
  	 	  member_email,
  	 	  enroll_date
  	      )
 		  values (
  		  #{memberNo},
  		  #{memberId},
  		  #{memberPw},
  		  #{memberNickname},
  		  #{memberPhone},
  		  #{memberAddr},
  		  #{memberGender},
  		  #{memberEmail},
    	  sysdate
 			 )
 </insert>
	
 <!-- 회원가입 - 전문가 -->  
 <insert id="insertExpert" parameterType="member">
  		 insert into tbl_exco
         exco.member_no AS memberNo,
         exco.member_id AS memberId,
         exco.member_pw AS memberPw,
         exco.member_nickname AS memberNickname,
         exco.member_phone AS memberPhone,
         exco.member_addr AS memberAddr,
         exco.member_gender AS memberGender,
         exco.member_email AS memberEmail,
         exco.enroll_date AS enrollDate,
         m.expert_file AS expertFile
		 JOIN tbl_expert_management m
		   ON exco.member_no = m.member_no		
  </insert>
  
  <!-- 회원가입 - 일반회원 -->
  <insert id="insertWholeMember" parameterType="member">
		  insert into tbl_whole_member
		  (member_no, member_type)
		  values
		  (#{memberNo}, 1)
  </insert>
   <!-- 회원가입 - 전문가 -->
  <insert id="insertWholeExpert" parameterType="member">
		  insert into tbl_whole_member
		  (member_no, member_type)
		  values
		  (#{memberNo}, 7)
  </insert>
  
  <!-- tbl_expert_management에 파일 경로 삽입 -->
	<insert id="insertExpertFile" parameterType="Map">
	    INSERT INTO tbl_expert_management (member_no, expert_file)
	    VALUES (#{memberNo}, #{filePath})
	</insert>
	
  <!-- 회원 ID로 회원 정보 조회 (프로필사진 업데이트) -->
    <select id="selectMemberById" parameterType="member" resultType="member">
        SELECT * FROM tbl_exco WHERE member_no = #{memberNo}
    </select>
  
  <!-- 아이디 중복체크 -->
  <select id="idDuplChk" parameterType="string" resultType="_int">
		   select count(*)
		   from tbl_exco
		   where member_id = #{_parameter}   
  </select>
  
  <!-- 닉네임 중복체크 -->
  <select id="nickDuplChk" parameterType="string" resultType="_int">
	 	   select count(*)
		   from tbl_exco
		   where member_Nickname = #{_parameter}   
  </select>
  
  <!-- memberNo 생성 -->
  <select id="selectMemberNo" resultType="string">
		   SELECT TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') || LPAD(seq_member.NEXTVAL, 4, '0') 
	       FROM DUAL
  </select>
  
  <!-- 회원 탈퇴 -->
   <delete id="deleteMember" parameterType="string">
		    DELETE FROM tbl_whole_member
		    WHERE member_no = #{memberNo}
  </delete>

  <!-- 비밀번호 확인 -->   
  <select id="checkPassword" parameterType="member" resultType="int">
		   SELECT COUNT(*) 
		   FROM tbl_exco
		   WHERE member_no = #{memberNo} 
		   AND member_pw = #{memberPw}
  </select>
  
  <!-- 회원정보 수정 -->
  <update id="updateMember" parameterType="member">
		   update tbl_exco
		   set member_pw = #{memberPw},
		       member_nickname = #{memberNickname},
		       member_phone = #{memberPhone},
		       member_addr = #{memberAddr},
		       member_email = #{memberEmail},
		       member_gender = #{memberGender}
		   where member_id = #{memberId}
  </update>
 
  <!-- 아이디 찾기 -->
  <select id="searchMemberId" parameterType="map" resultType="string">
  		   select member_id
  		   from tbl_exco
  		   where member_phone = #{memberPhone}
  		   and   member_email = #{memberEmail}
  </select>
  
  <!-- 비밀번호 찾기 -->
  <select id="searchMemberPw" parameterType="map" resultType="string">
  		   select member_pw
  		   from tbl_exco
  		   where member_id = #{memberId}
  		   and   member_email = #{memberEmail}
  </select>
  
  <!-- 비밀번호 업데이트 -->
  <update id="updateMemberPw" parameterType="map">
          update tbl_exco
          set member_pw = #{hashedPassword}
          where member_id = #{memberId}
  </update>

  <!-- 프로필 정보 업데이트 -->
  <insert id="updateProfileImage" parameterType="map">
        UPDATE tbl_exco
        SET profile_path = #{profilePath},
            profile_name = #{profileName}
        WHERE member_no = #{memberNo}
  </insert>
  
  <!-- 프로필 이미지 삽입 -->
  <insert id="insertProfileImage" parameterType="map">
	    INSERT INTO tbl_exco (profile_path, profile_name)
	    VALUES (#{profilePath}, #{profileName})
  </insert>
   
  <!-- introduceContent 가져오는 쿼리 -->
   <select id="getIntroduceContent" parameterType="string" resultType="string">
        SELECT INTRODUCE_CONTENT
        FROM tbl_expert_introduce
        WHERE MEMBER_NO = #{memberNo}
   </select>
    
   <!-- tbl_expert_introduce 테이블에서 해당 MEMBER_NO에 대한 데이터가 존재하면 업데이트하는 쿼리 -->
   <update id="updateIntroduce">
        UPDATE tbl_expert_introduce
        SET INTRODUCE_CONTENT = #{introduceContent}
        WHERE MEMBER_NO = #{memberNo}
   </update>

   <!-- tbl_expert_introduce 테이블에 해당 MEMBER_NO의 데이터가 없으면 INSERT하는 쿼리 -->
   <insert id="insertIntroduce">
        INSERT INTO tbl_expert_introduce (MEMBER_NO, INTRODUCE_TITLE, INTRODUCE_CONTENT, EXPERT_LIKE, EXPERT_DISLIKE)
        VALUES (#{memberNo}, '기본 제목', #{introduceContent}, 0, 0)
   </insert>
   
</mapper>
